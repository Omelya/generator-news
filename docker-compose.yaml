version: '3.5'
networks:
  generator-app-network:
    driver: bridge
    name: generator-app-network
services:
  app:
    container_name: generator-news
    image: generator-app
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - .:/var/www/html
    networks:
      - generator-app-network
    env_file:
      - provisioning/.env
    depends_on:
      - init-app
  init-app:
    container_name: generator-news-init
    image: generator-app
    volumes:
      - .:/var/www/html
    networks:
      - generator-app-network
    command: /opt/init-tasks.sh
    env_file:
      - provisioning/.env
    depends_on:
      - postgres
  tasks:
    container_name: generator-news-tasks
    image: generator-app
    restart: always
    volumes:
      - .:/var/www/html
      - ./provisioning/supervisor.d:/etc/supervisor/conf.d/:ro
    networks:
      - generator-app-network
    command: /opt/tasks.sh
    env_file:
      - provisioning/.env
    depends_on:
      - postgres
  postgres:
    container_name: generator-postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: generatedb
      POSTGRES_USER: vlad
      POSTGRES_PASSWORD: password
    ports:
      - "6000:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - generator-app-network
  redis:
    container_name: generator-redis
    image: bitnami/redis:latest
    env_file:
      - provisioning/.docker-compose.env
    networks:
      - generator-app-network
  nginx:
    container_name: generator-nginx
    image: nginx:alpine
    restart: always
    ports:
      - "8000:80"
    volumes:
      - ./provisioning/nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - generator-app-network
    depends_on:
      - app
volumes:
  db-data:
